# Generated by Django 5.0.8 on 2024-12-09 17:52

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("shared", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Updated at"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        db_index=True, max_length=254, unique=True, verbose_name="Email"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        db_index=True,
                        max_length=100,
                        unique=True,
                        verbose_name="Username",
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="avatars/",
                        verbose_name="Avatar",
                    ),
                ),
                ("is_active", models.BooleanField(default=False)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("ADMIN", "Admin"),
                            ("USER", "User"),
                            ("MODERATOR", "Moderator"),
                        ],
                        default="USER",
                        max_length=20,
                        verbose_name="Role",
                    ),
                ),
                (
                    "register_type",
                    models.CharField(
                        choices=[
                            ("EMAIL", "Email"),
                            ("GOOGLE", "Google"),
                            ("GITHUB", "Github"),
                        ],
                        default="EMAIL",
                        max_length=20,
                        verbose_name="Register type",
                    ),
                ),
                (
                    "is_private",
                    models.BooleanField(default=False, verbose_name="Private"),
                ),
                (
                    "following_count",
                    models.PositiveBigIntegerField(
                        default=0, verbose_name="Following count"
                    ),
                ),
                (
                    "follower_count",
                    models.PositiveBigIntegerField(
                        default=0, verbose_name="Follower count"
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="shared.country",
                        verbose_name="Country",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "db_table": "users",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ActiveSessions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Updated at"
                    ),
                ),
                (
                    "ip",
                    models.GenericIPAddressField(
                        db_index=True, verbose_name="IP address"
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(db_index=True, verbose_name="User agent"),
                ),
                (
                    "location",
                    models.JSONField(blank=True, null=True, verbose_name="Location"),
                ),
                (
                    "last_activity",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Last activity"
                    ),
                ),
                (
                    "fcm_token",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=255,
                        null=True,
                        verbose_name="FCM token",
                    ),
                ),
                (
                    "refresh_token",
                    models.TextField(db_index=True, verbose_name="Refresh token"),
                ),
                (
                    "access_token",
                    models.TextField(db_index=True, verbose_name="Access token"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is active"),
                ),
                ("data", models.JSONField(blank=True, null=True, verbose_name="Data")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sessions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Active session",
                "verbose_name_plural": "Active sessions",
                "db_table": "active_sessions",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Follower",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Updated at"
                    ),
                ),
                (
                    "follower",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="followers",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Follower",
                    ),
                ),
                (
                    "following",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="followings",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Following",
                    ),
                ),
            ],
            options={
                "verbose_name": "Follower",
                "verbose_name_plural": "Followers",
                "db_table": "followers",
                "ordering": ["-created_at"],
                "unique_together": {("follower", "following")},
            },
        ),
        migrations.CreateModel(
            name="UserData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Updated at"
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        choices=[
                            ("EMAIL", "Email"),
                            ("GOOGLE", "Google"),
                            ("GITHUB", "Github"),
                        ],
                        max_length=20,
                        verbose_name="Provider",
                    ),
                ),
                ("uid", models.CharField(max_length=100, verbose_name="Provider ID")),
                (
                    "extra_data",
                    models.JSONField(blank=True, null=True, verbose_name="Extra data"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="data",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "User data",
                "verbose_name_plural": "User data",
                "db_table": "user_data",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["provider"], name="user_data_provide_d58aba_idx"
                    ),
                    models.Index(fields=["uid"], name="user_data_uid_f3fdfc_idx"),
                ],
            },
        ),
    ]
